plot_pattern(missdata, vrb = "all", square = FALSE, rotate = TRUE, cluster = NULL)
plot_pattern(missdata, vrb = "all", square = FALSE, rotate = FALSE, cluster = NULL)
#list the variables you want to test
test_var_list = c("age", "EQ5D0", "height", "weight", "satisfaction", "bmi", "imdscore" )
outcome = "ohsdiff"
for (v in 1:length(test_var_list)){
df = cbind(data[test_var_list[v]],outcome = data[[outcome]])
#df= as.data.frame(df) #remove tibble
test = lm(outcome ~ ., data = df)
par(mfrow = c(2, 2))
plot(test,main=paste(test_var_list[v],"\n",sep=""))
}
#Selecting variables with missing data
missvars <- c("imdscore", "EQ5D0", "satisfaction", "ethnic", "height", "weight", "bmi", "retired")
missdata <- data[missvars]
#Exploring missing pattern with md.pattern() function
#The md.pattern() function shipped with Multivariate Imputation by Chained Equations (MICE) package can be used to produce a table displaying the missing pattern.
#install.package("mice")
library(mice)
md.pattern(missvars)
#Selecting variables with missing data
missvars <- c("imdscore", "EQ5D0", "satisfaction", "ethnic", "height", "weight", "bmi", "retired")
missdata <- data[missvars]
#Exploring missing pattern with md.pattern() function
#The md.pattern() function shipped with Multivariate Imputation by Chained Equations (MICE) package can be used to produce a table displaying the missing pattern.
#install.package("mice")
library(mice)
md.pattern(missvars)
md.pattern(missdata)
md.pattern(missdata, plot=FALSE)
md.pattern(missdata, plot=FALSE)
#Visual presentation of missing data pattern
#install.package("ggmice")
library(ggmice)
plot_pattern(missdata, vrb = "all", square = FALSE, rotate = FALSE, cluster = NULL)
#Visual presentation of missing data pattern
#install.package("ggmice")
library(ggmice)
plot_pattern(data, vrb = "all", square = FALSE, rotate = FALSE, cluster = NULL)
#Visual presentation of missing data pattern
#install.package("ggmice")
library(ggmice)
plot_pattern(data, vrb = "all", square = FALSE, rotate = FALSE, cluster = NULL)
install.packages("VIM")
library(VIM)
matrixplot(data)
barMiss(data)
histMiss(data)
aggr(data, numbers=TRUE,prop=FALSE)
aggr(missdata, numbers=TRUE,prop=FALSE)
aggr(missdata, numbers=FALSE,prop=TRUE)
#Selecting variables with missing data
missvars <- c("imdscore", "EQ5D0", "satisfaction", "ethnic", "height", "weight", "bmi", "retired")
missdata <- data[missvars]
#Exploring missing pattern with md.pattern() function
#The md.pattern() function shipped with Multivariate Imputation by Chained Equations (MICE) package can be used to produce a table displaying the missing pattern.
#install.package("mice")
library(mice)
md.pattern(missdata, plot=FALSE)
#Selecting variables with missing data
missvars <- c("imdscore", "EQ5D0", "satisfaction", "ethnic", "height", "weight", "bmi", "retired")
missdata <- data[missvars]
#Exploring missing pattern with md.pattern() function
#The md.pattern() function shipped with Multivariate Imputation by Chained Equations (MICE) package can be used to produce a table displaying the missing pattern.
#install.package("mice")
library(mice)
md.pattern(missdata, plot=TRUE)
#Visual presentation of missing data pattern
#install.package("ggmice")
library(ggmice)
plot_pattern(data, vrb = "all", square = FALSE, rotate = FALSE, cluster = NULL)
install.packages("VIM")
library(VIM)
matrixplot(data)
barMiss(data)
histMiss(data)
aggr(missdata, labels=names(missdata), numbers=FALSE,prop=TRUE)
#Visual presentation of missing data pattern
#install.package("ggmice")
library(ggmice)
plot_pattern(data, vrb = "all", square = FALSE, rotate = FALSE, cluster = NULL)
#install.packages("VIM")
library(VIM)
matrixplot(data)
barMiss(data)
histMiss(data)
aggr(missdata, labels=names(missdata), numbers=FALSE,prop=TRUE)
barMiss(data)
histMiss(data)
matrixplot(data)
name(missdata)
rownames(missdata)
colnames(missdata)
View(imp)
rename(missdata$satisfaction=missdata$sat)
names(missdata)[names(missdata) == "satisfaction"] <- "satisfaction"
#Visual presentation of missing data pattern
#install.package("ggmice")
library(ggmice)
plot_pattern(data, vrb = "all", square = FALSE, rotate = FALSE, cluster = NULL)
#install.packages("VIM")
library(VIM)
aggr(missdata, labels=names(missdata), numbers=FALSE,prop=TRUE)
names(missdata)[names(missdata) == "satisfaction"] <- "sat"
#Visual presentation of missing data pattern
#install.package("ggmice")
library(ggmice)
plot_pattern(data, vrb = "all", square = FALSE, rotate = FALSE, cluster = NULL)
#install.packages("VIM")
library(VIM)
aggr(missdata, labels=names(missdata), numbers=FALSE,prop=TRUE)
names(missdata)[names(missdata) == "satisfaction"] <- "satisfact"
#Visual presentation of missing data pattern
#install.package("ggmice")
library(ggmice)
plot_pattern(data, vrb = "all", square = FALSE, rotate = FALSE, cluster = NULL)
#install.packages("VIM")
library(VIM)
aggr(missdata, labels=names(missdata), numbers=FALSE,prop=TRUE)
names(missdata)[names(missdata) == "sat"] <- "satisfact"
#Visual presentation of missing data pattern
#install.package("ggmice")
library(ggmice)
plot_pattern(data, vrb = "all", square = FALSE, rotate = FALSE, cluster = NULL)
#install.packages("VIM")
library(VIM)
aggr(missdata, labels=names(missdata), numbers=FALSE,prop=TRUE)
names(missdata)[names(missdata) == "satisfact"] <- "satisfactio"
#Visual presentation of missing data pattern
#install.package("ggmice")
library(ggmice)
plot_pattern(data, vrb = "all", square = FALSE, rotate = FALSE, cluster = NULL)
#install.packages("VIM")
library(VIM)
aggr(missdata, labels=names(missdata), numbers=FALSE,prop=TRUE)
names(missdata)[names(missdata) == "satisfactio"] <- "satisfaction"
#Visual presentation of missing data pattern
#install.package("ggmice")
library(ggmice)
plot_pattern(data, vrb = "all", square = FALSE, rotate = FALSE, cluster = NULL)
#install.packages("VIM")
library(VIM)
aggr(missdata, labels=names(missdata), numbers=FALSE,prop=TRUE)
#Visual presentation of missing data pattern
#install.package("ggmice")
library(ggmice)
plot_pattern(data, vrb = "all", square = FALSE, rotate = FALSE, cluster = NULL)
#install.packages("VIM")
library(VIM)
aggr(data, labels=names(missdata), numbers=FALSE,prop=TRUE, delimiter="_imp")
#Visual presentation of missing data pattern
#install.package("ggmice")
library(ggmice)
plot_pattern(data, vrb = "all", square = FALSE, rotate = FALSE, cluster = NULL)
#install.packages("VIM")
library(VIM)
aggr(data, labels=names(data), numbers=FALSE,prop=TRUE, delimiter="_imp")
#Selecting variables with missing data
missvars <- c("imdscore", "EQ5D0", "satisfaction", "ethnic", "height", "weight", "bmi", "retired")
missdata <- data[missvars]
#Exploring missing pattern with md.pattern() function
#The md.pattern() function shipped with Multivariate Imputation by Chained Equations (MICE) package can be used to produce a table displaying the missing pattern.
#install.package("mice")
library(mice)
md.pattern(missdata, plot=TRUE, rotate.names=TRUE)
#Visual presentation of missing data pattern
#install.package("ggmice")
library(ggmice)
plot_pattern(missdata, vrb = "all", square = FALSE, rotate = TRUE, cluster = NULL)
#install.packages("VIM")
library(VIM)
aggr(data, labels=names(data), numbers=FALSE,prop=TRUE, delimiter="_imp")
#Visual presentation of missing data pattern
#install.package("ggmice")
library(ggmice)
plot_pattern(missdata, vrb = "all", square = FALSE, rotate = FALSE, cluster = NULL)
#install.packages("VIM")
library(VIM)
aggr(data, labels=names(data), numbers=FALSE,prop=TRUE, delimiter="_imp")
#Visual presentation of missing data pattern
#install.package("ggmice")
library(ggmice)
plot_pattern(missdata, vrb = "all", square = FALSE, rotate = FALSE, cluster = NULL)
#install.packages("VIM")
library(VIM)
aggr(data, labels=names(data), numbers=FALSE, prop=TRUE)
#Selecting variables with missing data
missvars <- c("imdscore", "EQ5D0", "satisfaction", "ethnic", "height", "weight", "bmi", "retired")
missdata <- data[missvars]
#Exploring missing pattern with md.pattern() function
#The md.pattern() function shipped with Multivariate Imputation by Chained Equations (MICE) package can be used to produce a table displaying the missing pattern.
#install.package("mice")
library(mice)
md.pattern(missdata, plot=FALSE)
#Visual presentation of missing data pattern
#We are using three different functions to display visually the patterns of the missing data in R:
library(mice)
md.pattern(missdata, plot=FALSE, rotate.names=TRUE)
#install.package("ggmice")
library(ggmice)
plot_pattern(missdata, vrb = "all", square = FALSE, rotate = FALSE, cluster = NULL)
#install.packages("VIM")
library(VIM)
aggr(data, labels=names(data), numbers=FALSE, prop=TRUE)
#Visual presentation of missing data pattern
#We are using three different functions to display visually the patterns of the missing data in R:
library(mice)
md.pattern(missdata, plot=TRUE, rotate.names=TRUE)
#install.package("ggmice")
library(ggmice)
plot_pattern(missdata, vrb = "all", square = FALSE, rotate = FALSE, cluster = NULL)
#install.packages("VIM")
library(VIM)
aggr(data, labels=names(data), numbers=FALSE, prop=TRUE)
#Visual presentation of missing data pattern
#We are using three different functions to display visually the patterns of the missing data in R:
library(mice)
md.pattern(missdata, table=FALSE, plot=TRUE, rotate.names=TRUE)
#Visual presentation of missing data pattern
#We are using three different functions to display visually the patterns of the missing data in R:
library(mice)
md.pattern(missdata, plot=TRUE, rotate.names=TRUE)
#install.package("ggmice")
library(ggmice)
plot_pattern(missdata, vrb = "all", square = FALSE, rotate = FALSE, cluster = NULL)
#install.packages("VIM")
library(VIM)
aggr(data, labels=names(data), numbers=FALSE, prop=TRUE)
version
version
version
version
#Insert the path were "hip.data" is stored
folder_path <- ("C:/Users/msanchez/Documents/GitHub/Practical_Imputation/multiple-imputation_with_mice/")
#load data
data <- read.csv("hip.csv", sep=',')
#transform/include labels to data
library(dplyr)
data = data %>%
mutate(sex = factor(sex, levels = c(0,1), labels = c("Male","Female")),
ethnic = factor(ethnic, levels = c(0,1), labels = c("White","Non white")),
retired = factor(retired, levels = c(0,1), labels = c("Not retired","Retired")),
side = factor(side, levels = c(0,1), labels = c("Right","Left")))
#Observe/explore data
dim(data)
summary(data)
#Insert the path were "hip.data" is stored
folder_path <- ("C:/Users/msanchez/Documents/GitHub/Practical_Imputation/multiple-imputation_with_mice/")
#load data
data <- read.csv("hip.csv", sep=',')
#transform/include labels to data
library(dplyr)
data = data %>%
mutate(sex = factor(sex, levels = c(0,1), labels = c("Male","Female")),
ethnic = factor(ethnic, levels = c(0,1), labels = c("White","Non white")),
retired = factor(retired, levels = c(0,1), labels = c("Not retired","Retired")),
side = factor(side, levels = c(0,1), labels = c("Right","Left")))
#Observe/explore data
dim(data)
summary(data)
#Insert the path were "hip.data" is stored
folder_path <- ("C:/Users/msanchez/Documents/GitHub/Practical_Imputation/multiple-imputation_with_mice/")
#load data
data <- read.csv("hip.csv", sep=',')
names(data)
#transform/include labels to data
library(dplyr)
data = data %>%
mutate(sex = factor(sex, levels = c(0,1), labels = c("Male","Female")),
ethnic = factor(ethnic, levels = c(0,1), labels = c("White","Non white")),
retired = factor(retired, levels = c(0,1), labels = c("Not retired","Retired")),
side = factor(side, levels = c(0,1), labels = c("Right","Left")))
#Observe/explore data
dim(data)
summary(data)
#Observe/explore data
dim(data)
#Display the names of variables in the data set.
names(data)
#install.packages("dplyr")
library(dplyr)
#Insert the path were "hip.data" is stored
folder_path <- ("C:/Users/msanchez/Documents/GitHub/Practical_Imputation/multiple-imputation_with_mice/")
#load data
data <- read.csv("hip.csv", sep=',')
#Display the names of variables in the data set.
names(data)
#transform/include labels to data
data = data %>%
mutate(sex = factor(sex, levels = c(0,1), labels = c("Male","Female")),
retired = factor(retired, levels = c(0,1), labels = c("Not retired","Retired")),
ethnic = factor(ethnic, levels = c(0,1), labels = c("White","Non white")),
side = factor(side, levels = c(0,1), labels = c("Right","Left")))
#Observe/explore data
dim(data)
summary(data)
summary(data)
#list the variables you want to test
test_var_list = c("EQ5D0", "height", "weight", "bmi", "satisfaction", "ethnic", "imdscore")
complete_var  = c("age", "sex", "retired", "ohs0","ohs6", "side") #, "improve") #Q: Since the outcome ("ohsdiff") is a derivation from  "oh0" and "oh6", should we include here?
for (v in 1:length(test_var_list)){
test_var = ifelse(is.na(data[[test_var_list[v]]]), 1,0 )
test = glm(test_var ~ ., data=data[complete_var] )
print(paste("Tested variable: ", test_var_list[v], sep=""))
print(summary(test))   #Check p_value
}
#list the variables you want to test
test_var_list = c("age", "EQ5D0", "height", "weight", "satisfaction", "bmi", "imdscore" )
outcome = "ohsdiff"
for (v in 1:length(test_var_list)){
df = cbind(data[test_var_list[v]],outcome = data[[outcome]])
#df= as.data.frame(df) #remove tibble
test = lm(outcome ~ ., data = df)
par(mfrow = c(2, 2))
plot(test,main=paste(test_var_list[v],"\n",sep=""))
}
#install.packages("dplyr")
library(dplyr)
#Insert the path were "hip.data" is stored
folder_path <- ("C:/Users/msanchez/Documents/GitHub/Practical_Imputation/multiple-imputation_with_mice/")
#load data
data <- read.csv("hip.csv", sep=',')
#Display the names of variables in the data set.
names(data)
#transform/include labels to data
data = data %>%
mutate(sex = factor(sex, levels = c(0,1), labels = c("Male","Female")),
retired = factor(retired, levels = c(0,1), labels = c("Not retired","Retired")),
ethnic = factor(ethnic, levels = c(0,1), labels = c("White","Non white")),
side = factor(side, levels = c(0,1), labels = c("Right","Left")))
#Observe/explore the data
dim(data)
summary(data)
#install.packages("dplyr")
library(dplyr)
#Insert the path were "hip.data" is stored
folder_path <- ("C:/Users/msanchez/Documents/GitHub/Practical_Imputation/multiple-imputation_with_mice/")
#load data
data <- read.csv("hip.csv", sep=',')
#Display the names of variables in the data set.
names(data)
#transform/include labels to data
data = data %>%
mutate(sex = factor(sex, levels = c(0,1), labels = c("Male","Female")),
retired = factor(retired, levels = c(0,1), labels = c("Not retired","Retired")),
ethnic = factor(ethnic, levels = c(0,1), labels = c("White","Non white")),
side = factor(side, levels = c(0,1), labels = c("Right","Left")))
#Observe/explore the data
dim(data)
summary(data)
na.test(airquality)
install.packages("na.test")
library(na.test)
install.packages("misty")
library(misty)
library(misty)
na.test(airquality)
na.test(data)
names(airquality)
names(missdata)
na.test(missdata)
#install.packages("dplyr")
library(dplyr)
#Insert the path were "hip.data" is stored
folder_path <- ("C:/Users/msanchez/Documents/GitHub/Practical_Imputation/multiple-imputation_with_mice/")
#load data
data <- read.csv("hip.csv", sep=',')
#Display the names of variables in the data set.
names(data)
#transform/include labels to data
data = data %>%
mutate(sex = factor(sex, levels = c(0,1), labels = c("Male","Female")),
retired = factor(retired, levels = c(0,1), labels = c("Not retired","Retired")),
ethnic = factor(ethnic, levels = c(0,1), labels = c("White","Non white")),
side = factor(side, levels = c(0,1), labels = c("Right","Left")))
#Observe/explore the data
dim(data)
summary(data)
na.test(data)
na.test(missdata)
names(data)
missvars <- c("imdscore", "EQ5D0", "satisfaction", "ethnic", "height", "weight", "bmi", "retired", "ohsdiff", "age", "sex", "side")
missdata <- data[missvars]
missdata <- data[missvars]
#Selecting variables with missing data
missvars <- c("imdscore", "EQ5D0", "satisfaction", "ethnic", "height", "weight", "bmi", "retired", "ohsdiff", "age", "sex")
missdata <- data[missvars]
names(data)
#Selecting variables with missing data
missvars <- c("imdscore", "EQ5D0", "satisfaction", "ethnic", "height", "weight", "bmi", "retired", "ohsdiff")
missdata <- data[missvars]
#Selecting variables with missing data
missvars <- c("imdscore", "EQ5D0", "satisfaction", "ethnic", "height", "weight", "bmi", "retired")
missdata <- data[missvars]
View(missdata)
View(missdata)
missdata <- data[missvars]
missdata <- data[c("imdscore", "EQ5D0", "satisfaction", "ethnic", "height", "weight", "bmi", "retired")]
missdata <- data["imdscore", "EQ5D0", "satisfaction", "ethnic", "height", "weight", "bmi", "retired"]
#Selecting variables with missing data
missvars <- c("imdscore", "EQ5D0", "satisfaction", "ethnic", "height", "weight", "bmi", "retired")
missdata <- data[,missvars]
missdata <- data[,c("imdscore", "EQ5D0", "satisfaction", "ethnic", "height", "weight", "bmi", "retired")]
missdata <- data[,c('imdscore', 'EQ5D0', 'satisfaction', 'ethnic', 'height', 'weight', 'bmi', 'retired')]
missdata <- data[c('imdscore', 'EQ5D0', 'satisfaction', 'ethnic', 'height', 'weight', 'bmi', 'retired')]
missdata <- data[missvars]
#Selecting variables with missing data
missvars <- c("imdscore", "EQ5D0", "satisfaction", "ethnic", "height", "weight", "bmi", "retired")
missdata <- data[missvars]
missdata <- data[,missvars]
missdata <- data[[missvars]]
#install.packages("dplyr")
library(dplyr)
rm(list=ls())
#install.packages("dplyr")
library(dplyr)
#Insert the path were "hip.data" is stored
folder_path <- ("C:/Users/msanchez/Documents/GitHub/Practical_Imputation/multiple-imputation_with_mice/")
#load data
data <- read.csv("hip.csv", sep=',')
#Display the names of variables in the data set.
names(data)
#transform/include labels to data
data = data %>%
mutate(sex = factor(sex, levels = c(0,1), labels = c("Male","Female")),
retired = factor(retired, levels = c(0,1), labels = c("Not retired","Retired")),
ethnic = factor(ethnic, levels = c(0,1), labels = c("White","Non white")),
side = factor(side, levels = c(0,1), labels = c("Right","Left")))
#Observe/explore the data
dim(data)
summary(data)
#list the variables you want to test
test_var_list = c("EQ5D0", "height", "weight", "bmi", "satisfaction", "ethnic", "imdscore")
complete_var  = c("age", "sex", "retired", "ohs0","ohs6", "side") #, "improve") #Q: Since the outcome ("ohsdiff") is a derivation from  "oh0" and "oh6", should we include here?
for (v in 1:length(test_var_list)){
test_var = ifelse(is.na(data[[test_var_list[v]]]), 1,0 )
test = glm(test_var ~ ., data=data[complete_var] )
print(paste("Tested variable: ", test_var_list[v], sep=""))
print(summary(test))   #Check p_value
}
#Selecting variables with missing data
missvars <- c("imdscore", "EQ5D0", "satisfaction", "ethnic", "height", "weight", "bmi", "retired")
missdata <- data[missvars]
View(data)
#Selecting variables with missing data
missvars <- c("imdscore", "EQ5D0", "satisfaction", "ethnic", "height", "weight", "bmi", "retired")
missdata <- data[missvars]
#Selecting variables with missing data
missvars <- c("imdscore", "EQ5D0", "satisfaction", "ethnic", "height", "weight", "bmi", "retired")
missdata <- data[missvars]
#Selecting variables with missing data
missvars <- c("imdscore", "EQ5D0", "satisfaction", "ethnic", "height", "weight", "bmi", "retired")
#missdata <- data[missvars]
#Exploring missing pattern with md.pattern() function
#The md.pattern() function shipped with Multivariate Imputation by Chained Equations (MICE) package can be used to produce a table displaying the missing pattern.
#install.package("mice")
library(mice)
md.pattern(data, plot=FALSE)
md.pattern(data, plot=FALSE)
#Selecting variables with missing data
missvars <- c("imdscore", "EQ5D0", "satisfaction", "ethnic", "height", "weight", "bmi", "retired")
missdata <- data[missvars]
#Selecting variables with missing data
missvars <- c("imdscore", "EQ5D0", "satisfaction", "ethnic", "height", "weight", "bmi", "retired")
#missdata <- data[missvars]
#Exploring missing pattern with md.pattern() function
#The md.pattern() function shipped with Multivariate Imputation by Chained Equations (MICE) package can be used to produce a table displaying the missing pattern.
#install.package("mice")
library(mice)
md.pattern(data, plot=FALSE)
#Visual presentation of missing data pattern
#We are using three different functions to display visually the patterns of the missing data in R:
#library(mice)
#md.pattern(missdata, plot=TRUE, rotate.names=TRUE)
#install.package("ggmice")
library(ggmice)
plot_pattern(data, vrb = "all", square = FALSE, rotate = FALSE, cluster = NULL)
#install.packages("VIM")
library(VIM)
aggr(data, labels=names(data), numbers=FALSE, prop=TRUE)
#library(mice)
md.pattern(missdata, plot=TRUE, rotate.names=TRUE)
#library(mice)
md.pattern(data, plot=TRUE, rotate.names=TRUE)
plot_pattern(data, vrb = "all", square = FALSE, rotate = FALSE, cluster = NULL)
plot_pattern(data, vrb = "all", square = FALSE, rotate = TRUE, cluster = NULL)
#list the variables you want to test
test_var_list = c("EQ5D0", "height", "weight", "bmi", "satisfaction", "ethnic", "imdscore")
complete_var  = c("age", "sex", "retired", "ohs0","ohs6", "side") #, "improve") #Q: Since the outcome ("ohsdiff") is a derivation from  "oh0" and "oh6", should we include here?
for (v in 1:length(test_var_list)){
test_var = ifelse(is.na(data[[test_var_list[v]]]), 1,0 )
test = glm(test_var ~ ., data=data[complete_var] )
print(paste("Tested variable: ", test_var_list[v], sep=""))
print(summary(test))   #Check p_value
}
#install.packages("dplyr")
library(dplyr)
#Insert the path were "hip.data" is stored
folder_path <- ("C:/Users/msanchez/Documents/GitHub/Practical_Imputation/multiple-imputation_with_mice/")
#load data
data <- read.csv("hip.csv", sep=',')
#Display the names of variables in the data set.
names(data)
#transform/include labels to data
data = data %>%
mutate(sex = factor(sex, levels = c(0,1), labels = c("Male","Female")),
retired = factor(retired, levels = c(0,1), labels = c("Not retired","Retired")),
ethnic = factor(ethnic, levels = c(0,1), labels = c("White","Non white")),
side = factor(side, levels = c(0,1), labels = c("Right","Left")))
#Observe/explore the data
dim(data)
summary(data)
