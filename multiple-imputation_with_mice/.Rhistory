)
library(dplyr)
data %>%
sex2 = factor(sex, levels = c(0,1), labels = c("Male","Female"))
library(dplyr)
data %>%
mutate(sex2 = factor(sex, levels = c(0,1), labels = c("Male","Female")),
ethnic = factor(ethnic, levels = c(0,1), labels = c("White","Non white"),
retired = factor(retired, levels = c(0,1), labels = c("Not retired","Retired"))
)
library(dplyr)
data %>%
mutate(sex2 = factor(sex, levels = c(0,1), labels = c("Male","Female")),
ethnic = factor(ethnic, levels = c(0,1), labels = c("White","Non white")),
retired = factor(retired, levels = c(0,1), labels = c("Not retired","Retired"))
)
head(data)
View(data)
data <- read_dta('C:/Users/martapm/Documents/GitHub/Practical_Imputation/multiple-imputation_with_mice/hip.dta')
class(data)
rm(list=ls())
library(haven)
data <- read_dta('C:/Users/martapm/Documents/GitHub/Practical_Imputation/multiple-imputation_with_mice/hip.dta')
dim(data)
summary(data)
#str(data)
class(data)
(data)
library(dplyr)
data %>%
mutate(sex2 = factor(sex, levels = c(0,1), labels = c("Male","Female")),
ethnic2 = factor(ethnic, levels = c(0,1), labels = c("White","Non white")),
retired2 = factor(retired, levels = c(0,1), labels = c("Not retired","Retired"))
)
names(data)
library(dplyr)
data %>% select() %>%
mutate(sex2 = factor(sex, levels = c(0,1), labels = c("Male","Female")),
ethnic2 = factor(ethnic, levels = c(0,1), labels = c("White","Non white")),
retired2 = factor(retired, levels = c(0,1), labels = c("Not retired","Retired"))
)
library(dplyr)
data %>% select() %>%
mutate(
#sex2 = factor(sex, levels = c(0,1), labels = c("Male","Female")),
ethnic2 = factor(ethnic, levels = c(0,1), labels = c("White","Non white")),
retired2 = factor(retired, levels = c(0,1), labels = c("Not retired","Retired"))
)
library(dplyr)
data %>%
mutate(sex2 = factor(sex, levels = c(0,1), labels = c("Male","Female")),
ethnic2 = factor(ethnic, levels = c(0,1), labels = c("White","Non white")),
retired2 = factor(retired, levels = c(0,1), labels = c("Not retired","Retired"))
)
names(data)
library(dplyr)
data = data %>%
mutate(sex2 = factor(sex, levels = c(0,1), labels = c("Male","Female")),
ethnic2 = factor(ethnic, levels = c(0,1), labels = c("White","Non white")),
retired2 = factor(retired, levels = c(0,1), labels = c("Not retired","Retired"))
)
library(dplyr)
data = data %>%
mutate(sex2 = factor(sex, levels = c(0,1), labels = c("Male","Female")),
ethnic2 = factor(ethnic, levels = c(0,1), labels = c("White","Non white")),
retired2 = factor(retired, levels = c(0,1), labels = c("Not retired","Retired"))
)
summary(data)
library(dplyr)
data = data %>%
mutate(sex = factor(sex, levels = c(0,1), labels = c("Male","Female")),
ethnic = factor(ethnic, levels = c(0,1), labels = c("White","Non white")),
retired = factor(retired, levels = c(0,1), labels = c("Not retired","Retired"))
)
summary(data)
#load data
library(haven)
data <- read_dta('C:/Users/martapm/Documents/GitHub/Practical_Imputation/multiple-imputation_with_mice/hip.dta')
#transform/include labels to data
library(dplyr)
data = data %>%
mutate(sex = factor(sex, levels = c(0,1), labels = c("Male","Female")),
ethnic = factor(ethnic, levels = c(0,1), labels = c("White","Non white")),
retired = factor(retired, levels = c(0,1), labels = c("Not retired","Retired"))
)
#Observe data
dim(data)
summary(data)
#str(data)
names(data)
#load data
library(haven)
data <- read_dta('C:/Users/martapm/Documents/GitHub/Practical_Imputation/multiple-imputation_with_mice/hip.dta')
#transform/include labels to data
library(dplyr)
data = data %>%
mutate(sex = factor(sex, levels = c(0,1), labels = c("Male","Female")),
ethnic = factor(ethnic, levels = c(0,1), labels = c("White","Non white")),
retired = factor(retired, levels = c(0,1), labels = c("Not retired","Retired")),
improve = ifelse(ohsdiff<=0,"NO","YES")
)
#data$improve[data$ohsdiff<=0]<-0 # 0 if not improved
#data$improve[data$ohsdiff>0]<-1 # 1 if improved
#Observe data
dim(data)
summary(data)
#str(data)
#load data
library(haven)
data <- read_dta('C:/Users/martapm/Documents/GitHub/Practical_Imputation/multiple-imputation_with_mice/hip.dta')
#transform/include labels to data
library(dplyr)
data = data %>%
mutate(sex = factor(sex, levels = c(0,1), labels = c("Male","Female")),
ethnic = factor(ethnic, levels = c(0,1), labels = c("White","Non white")),
retired = factor(retired, levels = c(0,1), labels = c("Not retired","Retired")),
improve = factor(ifelse(ohsdiff<=0,"NO","YES"))
)
#data$improve[data$ohsdiff<=0]<-0 # 0 if not improved
#data$improve[data$ohsdiff>0]<-1 # 1 if improved
#Observe data
dim(data)
summary(data)
#str(data)
table(data$improve)
test_var_list = names(data)[-17]
names(data[-[test_var_list]])
names(data[[test_var_list]])
names(data[[test_var_list]])
names(data[test_var_list])
names(data[-test_var_list])
names(data[-c(test_var_list)] )
names(data[c(test_var_list)] )
names(data[(test_var_list)] )
names(data[!(test_var_list)] )
names(data[-(test_var_list)] )
complete_var  = anti_join(names(data), test_var_list)
anti_join(c(names(data)), test_var_list))
anti_join(c(names(data)), test_var_list)
c(names(data))
test_var_list
#list the variables you want to test
test_var_list = c("EQ5D0", "height", "weight", "bmi", "satisfaction", "ethnic", "imdscore")
anti_join(c(names(data)), test_var_list)
test_var_list
(names(data)
)
#list the variables you want to test
test_var_list = c("EQ5D0", "height", "weight", "bmi", "satisfaction", "ethnic", "imdscore")
v
v=1
test_var = ifelse(is.na(boys[[test_var_list[v]]]), 1,0 )
test_var
test_var = ifelse(is.na(data[[test_var_list[v]]]), 1,0 )
head(test_var)
test = glm(test_var ~ ., data=data[complete_var] )
#list the variables you want to test
test_var_list = c("EQ5D0", "height", "weight", "bmi", "satisfaction", "ethnic", "imdscore")
complete_var  = c("age", "sex", "retired", "ohs0","ohs6", "side", "improve")
test = glm(test_var ~ ., data=data[complete_var] )
ci = confint.default(test)
ci
#list the variables you want to test
test_var_list = c("EQ5D0", "height", "weight", "bmi", "satisfaction", "ethnic", "imdscore")
complete_var  = c("age", "sex", "retired", "ohs0","ohs6", "side", "improve")
for (v in 1:length(test_var_list)){
test_var = ifelse(is.na(data[[test_var_list[v]]]), 1,0 )
test = glm(test_var ~ ., data=data[complete_var] )
print(paste("Tested variable: ", test_var_list[v], sep=""))
print(summary(test))   #Check p_value
}
#list the variables you want to test
test_var_list = c("EQ5D0", "height", "weight", "bmi", "satisfaction", "ethnic", "imdscore")
complete_var  = c("age", "sex", "retired", "ohs0","ohs6", "side", "improve")
for (v in 1:length(test_var_list)){
test_var = ifelse(is.na(data[[test_var_list[v]]]), 1,0 )
test = glm(test_var ~ age, data=data[complete_var] )
print(paste("Tested variable: ", test_var_list[v], sep=""))
print(summary(test))   #Check p_value
}
#list the variables you want to test
test_var_list = c("EQ5D0", "height", "weight", "bmi", "satisfaction", "ethnic", "imdscore")
complete_var  = c("age", "sex", "retired", "ohs0","ohs6", "side", "improve")
for (v in 1:length(test_var_list)){
test_var = ifelse(is.na(data[[test_var_list[v]]]), 1,0 )
test = glm(test_var ~ ., data=data[complete_var] )
print(paste("Tested variable: ", test_var_list[v], sep=""))
print(summary(test))   #Check p_value
}
#list the variables you want to test
test_var_list = c("EQ5D0", "height", "weight", "bmi", "satisfaction", "ethnic", "imdscore")
complete_var  = c("age", "sex", "retired", "ohs0","ohs6", "side")
for (v in 1:length(test_var_list)){
test_var = ifelse(is.na(data[[test_var_list[v]]]), 1,0 )
test = glm(test_var ~ ., data=data[complete_var] )
print(paste("Tested variable: ", test_var_list[v], sep=""))
print(summary(test))   #Check p_value
}
#list the variables you want to test
test_var_list = c("age", "oh0", "oh6", "ohsdiff", "EQ5D0", "height", "weight", "satisfaction", "bmi", "imdscore" )
outcome = "improve"
for (v in 1:length(test_var_list)){
df = cbind(data[test_var_list[v]],outcome = data[[outcome]])
test = lm(outcome ~ ., data = df)
par(mfrow = c(2, 2))
plot(test,main=paste(test_var_list[v],"\n",sep=""))
}
#list the variables you want to test
test_var_list = c("age", "oh0", "oh6", "ohsdiff", "EQ5D0", "height", "weight", "satisfaction", "bmi", "imdscore" )
outcome = "improve"
for (v in 1:length(test_var_list)){
df = cbind(data[test_var_list[v]],outcome = data[[outcome]])
test = glm(outcome ~ ., data = df)
par(mfrow = c(2, 2))
plot(test,main=paste(test_var_list[v],"\n",sep=""))
}
#load data
library(haven)
data <- read_dta('C:/Users/martapm/Documents/GitHub/Practical_Imputation/multiple-imputation_with_mice/hip.dta')
#transform/include labels to data
library(dplyr)
data = data %>%
mutate(sex = factor(sex, levels = c(0,1), labels = c("Male","Female")),
ethnic = factor(ethnic, levels = c(0,1), labels = c("White","Non white")),
retired = factor(retired, levels = c(0,1), labels = c("Not retired","Retired")),
improve = factor(ifelse(ohsdiff<=0,0,1 )) #"NO","YES"
)
#data$improve[data$ohsdiff<=0]<-0 # 0 if not improved
#data$improve[data$ohsdiff>0]<-1 # 1 if improved
#Observe data
dim(data)
summary(data)
#str(data)
#list the variables you want to test
test_var_list = c("age", "oh0", "oh6", "ohsdiff", "EQ5D0", "height", "weight", "satisfaction", "bmi", "imdscore" )
outcome = "improve"
for (v in 1:length(test_var_list)){
df = cbind(data[test_var_list[v]],outcome = data[[outcome]])
test = lm(outcome ~ ., data = df)
par(mfrow = c(2, 2))
plot(test,main=paste(test_var_list[v],"\n",sep=""))
}
summary(data[[test_var_list]])
summary(data[test_var_list])
test_var_list
data[test_var_list]
data[[test_var_list]]
names(data)
data[c(test_var_list)]
#list the variables you want to test
test_var_list = c("age", "ohs0", "ohs6", "ohsdiff", "EQ5D0", "height", "weight", "satisfaction", "bmi", "imdscore" )
data[c(test_var_list)]
#list the variables you want to test
test_var_list = c("age", "ohs0", "ohs6", "ohsdiff", "EQ5D0", "height", "weight", "satisfaction", "bmi", "imdscore" )
outcome = "improve"
for (v in 1:length(test_var_list)){
df = cbind(data[test_var_list[v]],outcome = data[[outcome]])
test = lm(outcome ~ ., data = df)
par(mfrow = c(2, 2))
plot(test,main=paste(test_var_list[v],"\n",sep=""))
}
str(data[c(test_var_list)])
v
df = cbind(data[test_var_list[v]],outcome = data[[outcome]])
head(df)
summary(head(df))
dim(data)
dim(data[[outcome]])
#list the variables you want to test
test_var_list = c("age", "ohs0", "ohs6", "ohsdiff", "EQ5D0", "height", "weight", "satisfaction", "bmi", "imdscore" )
outcome = "improve"
length((data[[outcome]]))
df = cbind(data[test_var_list[v]],outcome = data[[outcome]])
tabledf$outcome)
table(df$outcome)
test = lm(outcome ~ ., data = df)
summary(test)
df
cbind(numeric(data[test_var_list[v]]),outcome = data[[outcome]])
df = cbind(numeric(data[test_var_list[v]]),outcome = data[[outcome]])
df = cbind(data[test_var_list[v]],outcome = data[[outcome]])
v2
v=2
df = cbind(data[test_var_list[v]],outcome = data[[outcome]])
test = lm(outcome ~ ., data = df)
test = glm(outcome ~ ., data = df)
glm(outcome ~ ., data = df)
attr(df)
attr(df[1])
attr(df[1],"ATT")
names(df)
attr(df$ohs,"ATT")
str(df)
df= data.frame(df)
str(df)
View(read_dta('C:/Users/martapm/Documents/GitHub/Practical_Imputation/multiple-imputation_with_mice/hip.dta', label = NULL))
read_stata('C:/Users/martapm/Documents/GitHub/Practical_Imputation/multiple-imputation_with_mice/hip.dta')
#list the variables you want to test
test_var_list = c("age", "ohs0", "ohs6", "ohsdiff", "EQ5D0", "height", "weight", "satisfaction", "bmi", "imdscore" )
outcome = "improve"
#list the variables you want to test
test_var_list = c("age", "ohs0", "ohs6", "ohsdiff", "EQ5D0", "height", "weight", "satisfaction", "bmi", "imdscore" )
outcome = "improve"
for (v in 1:length(test_var_list)){
df = cbind(data[test_var_list[v]],outcome = data[[outcome]])
df= as.data.frame(df) #remove tibble
test = lm(outcome ~ ., data = df)
par(mfrow = c(2, 2))
plot(test,main=paste(test_var_list[v],"\n",sep=""))
}
V=1
df = cbind(data[test_var_list[v]],outcome = data[[outcome]])
df= as.data.frame(df) #remove tibble
class(df)
class(df$age)
df
lm(outcome ~ ., data = df)
test = lm(outcome ~ ., data = df)
test = glm(outcome ~ ., data = df)
str(df)
df = cbind(data[test_var_list[v]],outcome = data[[outcome]])
df= as.data.frame(df) #remove tibble
str(df)
test = lrm(outcome ~ ., data = df)
library(rms)
install.packages("rms")
library(rms)
library(rms)
library(rms)
lrm(outcome ~ ., data = df)
install.packages("matrix")
library(rms)
glm(outcome ~ ., data = df)
dim(df)
lm(outcome ~ ., data = df)
summary(lm(outcome ~ ., data = df))
lm(improve~age,data=data)
lm(outcome ~ age+bmi, data = df)
lm(outcome ~ age+bmi, data)
lm(improve ~ age+bmi, data=data)
str(data)
For (var in colnames(data)) {
attr(data[,deparse(as.name(var))], "ATT_1") <- NULL
attr(data[,deparse(as.name(var))], "ATT_2") <- NULL
}
for (var in colnames(data)) {
attr(data[,deparse(as.name(var))], "ATT_1") <- NULL
attr(data[,deparse(as.name(var))], "ATT_2") <- NULL
}
strdata)
str(data)
#list the variables you want to test
test_var_list = c("EQ5D0", "height", "weight", "bmi", "satisfaction", "ethnic", "imdscore")
complete_var  = c("age", "sex", "retired", "ohs0","ohs6", "side") #, "improve") #Q: Since the outcome ("ohsdiff") is a derivation from  "oh0" and "oh6", should we included here?
for (v in 1:length(test_var_list)){
test_var = ifelse(is.na(data[[test_var_list[v]]]), 1,0 )
test = glm(test_var ~ ., data=data[complete_var] )
print(paste("Tested variable: ", test_var_list[v], sep=""))
print(summary(test))   #Check p_value
}
#list the variables you want to test
test_var_list = c("EQ5D0", "height", "weight", "bmi", "satisfaction", "ethnic", "imdscore")
complete_var  = c("age", "sex", "retired", "ohs0","ohs6", "side", "improve") #Q: Since the outcome ("ohsdiff") is a derivation from  "oh0" and "oh6", should we included here?
glm(improve ~ ., data=data[complete_var] )
table(data$improve)
str(table(data$improve))
class(table(data$improve))
class(data$improve)
#load data
library(haven)
data <- read_dta('C:/Users/martapm/Documents/GitHub/Practical_Imputation/multiple-imputation_with_mice/hip.dta')
#transform/include labels to data
library(dplyr)
data = data %>%
mutate(sex = factor(sex, levels = c(0,1), labels = c("Male","Female")),
ethnic = factor(ethnic, levels = c(0,1), labels = c("White","Non white")),
retired = factor(retired, levels = c(0,1), labels = c("Not retired","Retired")),
improve = ifelse(ohsdiff<=0,0,1 )) #"NO","YES"
)
#load data
library(haven)
data <- read_dta('C:/Users/martapm/Documents/GitHub/Practical_Imputation/multiple-imputation_with_mice/hip.dta')
#transform/include labels to data
library(dplyr)
data = data %>%
mutate(sex = factor(sex, levels = c(0,1), labels = c("Male","Female")),
ethnic = factor(ethnic, levels = c(0,1), labels = c("White","Non white")),
retired = factor(retired, levels = c(0,1), labels = c("Not retired","Retired")),
improve = ifelse(ohsdiff<=0,0,1 ) #"NO","YES"
)
#data$improve[data$ohsdiff<=0]<-0 # 0 if not improved
#data$improve[data$ohsdiff>0]<-1 # 1 if improved
#Observe data
dim(data)
summary(data)
#str(data)
#list the variables you want to test
test_var_list = c("age", "ohs0", "ohs6", "ohsdiff", "EQ5D0", "height", "weight", "satisfaction", "bmi", "imdscore" )
outcome = "improve"
for (v in 1:length(test_var_list)){
df = cbind(data[test_var_list[v]],outcome = data[[outcome]])
#df= as.data.frame(df) #remove tibble
test = lm(outcome ~ age+bmi, data = df)
par(mfrow = c(2, 2))
plot(test,main=paste(test_var_list[v],"\n",sep=""))
}
test_var_list = c("age", "ohs0", "ohs6", "ohsdiff", "EQ5D0", "height", "weight", "satisfaction", "bmi", "imdscore" )
outcome = "improve"
v
df = cbind(data[test_var_list[v]],outcome = data[[outcome]])
#df= as.data.frame(df) #remove tibble
test = lm(outcome ~ age+bmi, data = df)
#df= as.data.frame(df) #remove tibble
test = lm(outcome ~ age, data = df)
par(mfrow = c(2, 2))
plot(test,main=paste(test_var_list[v],"\n",sep=""))
#list the variables you want to test
test_var_list = c("age", "ohs0", "ohs6", "ohsdiff", "EQ5D0", "height", "weight", "satisfaction", "bmi", "imdscore" )
outcome = "improve"
for (v in 1:length(test_var_list)){
df = cbind(data[test_var_list[v]],outcome = data[[outcome]])
#df= as.data.frame(df) #remove tibble
test = lm(outcome ~ age, data = df)
par(mfrow = c(2, 2))
plot(test,main=paste(test_var_list[v],"\n",sep=""))
}
#list the variables you want to test
test_var_list = c("age", "ohs0", "ohs6", "ohsdiff", "EQ5D0", "height", "weight", "satisfaction", "bmi", "imdscore" )
outcome = "improve"
for (v in 1:length(test_var_list)){
df = cbind(data[test_var_list[v]],outcome = data[[outcome]])
#df= as.data.frame(df) #remove tibble
test = lm(outcome ~ ., data = df)
par(mfrow = c(2, 2))
plot(test,main=paste(test_var_list[v],"\n",sep=""))
}
knitr::opts_chunk$set(echo = TRUE)
#load data
library(haven)
data <- read_dta('C:/Users/martapm/Documents/GitHub/Practical_Imputation/multiple-imputation_with_mice/hip.dta')
#transform/include labels to data
library(dplyr)
data = data %>%
mutate(sex = factor(sex, levels = c(0,1), labels = c("Male","Female")),
ethnic = factor(ethnic, levels = c(0,1), labels = c("White","Non white")),
retired = factor(retired, levels = c(0,1), labels = c("Not retired","Retired")),
improve = ifelse(ohsdiff<=0,0,1 ) #"NO","YES"
)
#data$improve[data$ohsdiff<=0]<-0 # 0 if not improved
#data$improve[data$ohsdiff>0]<-1 # 1 if improved
#Observe data
dim(data)
summary(data)
#str(data)
#list the variables you want to test
test_var_list = c("EQ5D0", "height", "weight", "bmi", "satisfaction", "ethnic", "imdscore")
complete_var  = c("age", "sex", "retired", "ohs0","ohs6", "side") #, "improve") #Q: Since the outcome ("ohsdiff") is a derivation from  "oh0" and "oh6", should we included here?
for (v in 1:length(test_var_list)){
test_var = ifelse(is.na(data[[test_var_list[v]]]), 1,0 )
test = glm(test_var ~ ., data=data[complete_var] )
print(paste("Tested variable: ", test_var_list[v], sep=""))
print(summary(test))   #Check p_value
}
#list the variables you want to test
test_var_list = c("age", "ohs0", "ohs6", "ohsdiff", "EQ5D0", "height", "weight", "satisfaction", "bmi", "imdscore" )
outcome = "improve"
for (v in 1:length(test_var_list)){
df = cbind(data[test_var_list[v]],outcome = data[[outcome]])
#df= as.data.frame(df) #remove tibble
test = lm(outcome ~ ., data = df)
par(mfrow = c(2, 2))
plot(test,main=paste(test_var_list[v],"\n",sep=""))
}
tinytex::install_tinytex()
knitr::opts_chunk$set(echo = TRUE)
library(mice)
dim(boys)
summary(boys)
str(boys)
#list the variables you want to test
test_var_list = names(boys)[-1]
for (v in 1:length(test_var_list)){
test_var = ifelse(is.na(boys[[test_var_list[v]]]), 1,0 )
test = glm(test_var ~ boys$age)
ci = confint.default(test)
print(paste(test_var_list[v]," ~ AGE 95%CI: Low ", round(ci[2,1],4),"  High ", round(ci[2,2],4), sep="")) #Check CI
print(paste(test_var_list[v]," ~ AGE p value: ",   round((summary(test))$coefficients[2,4],5), sep=""))   #Check p_value
}
#list the variables you want to test
test_var_list = c("age","hgt","wgt","bmi","hc")
outcome = "tv"
for (v in 1:length(test_var_list)){
df = cbind(boys[test_var_list[v]],outcome = boys[[outcome]])
test = lm(outcome ~ ., data = df)
par(mfrow = c(2, 2))
plot(test,main=paste(test_var_list[v],"\n",sep=""))
}
library(dplyr)
#transform to categorical
boys %>%
mutate(
age_cat = ifelse(age>=18,">=18","<18")
)
#Include the NA
boys %>%
mutate(
age_cat = ifelse(is.na(age),"NA",age_cat)
)
names(data)
names(data)
pred_list = c("EQ5D0", "height", "weight","satisfaction", "bmi", "ethnic", "imdscore")
summary(data[pred_list])
