#load data
library(haven)
data <- read_dta('C:/Users/martapm/Documents/GitHub/Practical_Imputation/multiple-imputation_with_mice/hip.dta')
#transform/include labels to data
library(dplyr)
data = data %>%
mutate(sex = factor(sex, levels = c(0,1), labels = c("Male","Female")),
ethnic = factor(ethnic, levels = c(0,1), labels = c("White","Non white")),
retired = factor(retired, levels = c(0,1), labels = c("Not retired","Retired")),
improve = ifelse(ohsdiff<=0,0,1 ) #"NO","YES"
)
#data$improve[data$ohsdiff<=0]<-0 # 0 if not improved
#data$improve[data$ohsdiff>0]<-1 # 1 if improved
#Observe data
dim(data)
summary(data)
#str(data)
#list the variables you want to test
test_var_list = c("age", "ohs0", "ohs6", "ohsdiff", "EQ5D0", "height", "weight", "satisfaction", "bmi", "imdscore" )
outcome = "improve"
for (v in 1:length(test_var_list)){
df = cbind(data[test_var_list[v]],outcome = data[[outcome]])
#df= as.data.frame(df) #remove tibble
test = lm(outcome ~ age+bmi, data = df)
par(mfrow = c(2, 2))
plot(test,main=paste(test_var_list[v],"\n",sep=""))
}
test_var_list = c("age", "ohs0", "ohs6", "ohsdiff", "EQ5D0", "height", "weight", "satisfaction", "bmi", "imdscore" )
outcome = "improve"
v
df = cbind(data[test_var_list[v]],outcome = data[[outcome]])
#df= as.data.frame(df) #remove tibble
test = lm(outcome ~ age+bmi, data = df)
#df= as.data.frame(df) #remove tibble
test = lm(outcome ~ age, data = df)
par(mfrow = c(2, 2))
plot(test,main=paste(test_var_list[v],"\n",sep=""))
#list the variables you want to test
test_var_list = c("age", "ohs0", "ohs6", "ohsdiff", "EQ5D0", "height", "weight", "satisfaction", "bmi", "imdscore" )
outcome = "improve"
for (v in 1:length(test_var_list)){
df = cbind(data[test_var_list[v]],outcome = data[[outcome]])
#df= as.data.frame(df) #remove tibble
test = lm(outcome ~ age, data = df)
par(mfrow = c(2, 2))
plot(test,main=paste(test_var_list[v],"\n",sep=""))
}
#list the variables you want to test
test_var_list = c("age", "ohs0", "ohs6", "ohsdiff", "EQ5D0", "height", "weight", "satisfaction", "bmi", "imdscore" )
outcome = "improve"
for (v in 1:length(test_var_list)){
df = cbind(data[test_var_list[v]],outcome = data[[outcome]])
#df= as.data.frame(df) #remove tibble
test = lm(outcome ~ ., data = df)
par(mfrow = c(2, 2))
plot(test,main=paste(test_var_list[v],"\n",sep=""))
}
knitr::opts_chunk$set(echo = TRUE)
#load data
library(haven)
data <- read_dta('C:/Users/martapm/Documents/GitHub/Practical_Imputation/multiple-imputation_with_mice/hip.dta')
#transform/include labels to data
library(dplyr)
data = data %>%
mutate(sex = factor(sex, levels = c(0,1), labels = c("Male","Female")),
ethnic = factor(ethnic, levels = c(0,1), labels = c("White","Non white")),
retired = factor(retired, levels = c(0,1), labels = c("Not retired","Retired")),
improve = ifelse(ohsdiff<=0,0,1 ) #"NO","YES"
)
#data$improve[data$ohsdiff<=0]<-0 # 0 if not improved
#data$improve[data$ohsdiff>0]<-1 # 1 if improved
#Observe data
dim(data)
summary(data)
#str(data)
#list the variables you want to test
test_var_list = c("EQ5D0", "height", "weight", "bmi", "satisfaction", "ethnic", "imdscore")
complete_var  = c("age", "sex", "retired", "ohs0","ohs6", "side") #, "improve") #Q: Since the outcome ("ohsdiff") is a derivation from  "oh0" and "oh6", should we included here?
for (v in 1:length(test_var_list)){
test_var = ifelse(is.na(data[[test_var_list[v]]]), 1,0 )
test = glm(test_var ~ ., data=data[complete_var] )
print(paste("Tested variable: ", test_var_list[v], sep=""))
print(summary(test))   #Check p_value
}
#list the variables you want to test
test_var_list = c("age", "ohs0", "ohs6", "ohsdiff", "EQ5D0", "height", "weight", "satisfaction", "bmi", "imdscore" )
outcome = "improve"
for (v in 1:length(test_var_list)){
df = cbind(data[test_var_list[v]],outcome = data[[outcome]])
#df= as.data.frame(df) #remove tibble
test = lm(outcome ~ ., data = df)
par(mfrow = c(2, 2))
plot(test,main=paste(test_var_list[v],"\n",sep=""))
}
tinytex::install_tinytex()
knitr::opts_chunk$set(echo = TRUE)
library(mice)
dim(boys)
summary(boys)
str(boys)
#list the variables you want to test
test_var_list = names(boys)[-1]
for (v in 1:length(test_var_list)){
test_var = ifelse(is.na(boys[[test_var_list[v]]]), 1,0 )
test = glm(test_var ~ boys$age)
ci = confint.default(test)
print(paste(test_var_list[v]," ~ AGE 95%CI: Low ", round(ci[2,1],4),"  High ", round(ci[2,2],4), sep="")) #Check CI
print(paste(test_var_list[v]," ~ AGE p value: ",   round((summary(test))$coefficients[2,4],5), sep=""))   #Check p_value
}
#list the variables you want to test
test_var_list = c("age","hgt","wgt","bmi","hc")
outcome = "tv"
for (v in 1:length(test_var_list)){
df = cbind(boys[test_var_list[v]],outcome = boys[[outcome]])
test = lm(outcome ~ ., data = df)
par(mfrow = c(2, 2))
plot(test,main=paste(test_var_list[v],"\n",sep=""))
}
library(dplyr)
#transform to categorical
boys %>%
mutate(
age_cat = ifelse(age>=18,">=18","<18")
)
#Include the NA
boys %>%
mutate(
age_cat = ifelse(is.na(age),"NA",age_cat)
)
names(data)
names(data)
pred_list = c("EQ5D0", "height", "weight","satisfaction", "bmi", "ethnic", "imdscore")
summary(data[pred_list])
knitr::opts_chunk$set(echo = TRUE)
library(haven)
#Insert the path were "hip.data" is stored
folder_path <- ("'C:/Users/martapm/Documents/GitHub/Practical_Imputation/multiple-imputation_with_mice/")
#load data
data <- read_dta(paste(folder_path,"hip.dta",sep=""))
rm(list=ls())
library(haven)
#Insert the path were "hip.data" is stored
folder_path <- ("'C:/Users/martapm/Documents/GitHub/Practical_Imputation/multiple-imputation_with_mice/")
#load data
data <- read_dta(paste(folder_path,"hip.dta",sep=""))
paste(folder_path,"hip.dta",sep="")
#Insert the path were "hip.data" is stored
folder_path <- ("C:/Users/martapm/Documents/GitHub/Practical_Imputation/multiple-imputation_with_mice/")
#load data
data <- read_dta(paste(folder_path,"hip.dta",sep=""))
#transform/include labels to data
library(dplyr)
data = data %>%
mutate(sex = factor(sex, levels = c(0,1), labels = c("Male","Female")),
ethnic = factor(ethnic, levels = c(0,1), labels = c("White","Non white")),
retired = factor(retired, levels = c(0,1), labels = c("Not retired","Retired")),
improve = ifelse(ohsdiff<=0,0,1 ) #"NO","YES"
)
#Observe data
dim(data)
summary(data)
library(haven)
#Insert the path were "hip.data" is stored
folder_path <- ("C:/Users/martapm/Documents/GitHub/Practical_Imputation/multiple-imputation_with_mice/")
#load data
data <- read_dta(paste(folder_path,"hip.dta",sep=""))
#transform/include labels to data
library(dplyr)
data = data %>%
mutate(sex = factor(sex, levels = c(0,1), labels = c("Male","Female")),
ethnic = factor(ethnic, levels = c(0,1), labels = c("White","Non white")),
retired = factor(retired, levels = c(0,1), labels = c("Not retired","Retired")),
improve = ifelse(ohsdiff<=0,0,1 ) #"NO","YES"
)
#Observe data
dim(data)
summary(data)
#str(data)
#list the variables you want to test
test_var_list = c("EQ5D0", "height", "weight", "bmi", "satisfaction", "ethnic", "imdscore")
complete_var  = c("age", "sex", "retired", "ohs0","ohs6", "side") #, "improve") #Q: Since the outcome ("ohsdiff") is a derivation from  "oh0" and "oh6", should we included here?
for (v in 1:length(test_var_list)){
test_var = ifelse(is.na(data[[test_var_list[v]]]), 1,0 )
test = glm(test_var ~ ., data=data[complete_var] )
print(paste("Tested variable: ", test_var_list[v], sep=""))
print(summary(test))   #Check p_value
}
names(data) #see order: "EQ5D0", "height", "weight","satisfaction", "bmi", "ethnic", "imdscore"
#see order of "EQ5D0", "height", "weight","satisfaction", "bmi", "ethnic", "imdscore"
names(data)
#Save the name of the variables we want to predict in order
pred_list = c("EQ5D0", "height", "weight","satisfaction", "bmi", "ethnic", "imdscore")
#inlcude the method we want to use for the prediction
methods = c("EQ5D0", "height", "weight","satisfaction", "bmi", "ethnic", "imdscore")
ls()
str(pref_list)
class(pred_list)
names(data) #3.1
pred_list=c("EQ5D0","height","weight","satisfaction","bmi","ethnic","imdscore")#3.2
methods=c("EQ5D0","height","weight","satisfaction","bmi","ethnic","imdscore")  #3.3
names(data) #3.1
(pred_list=c("EQ5D0","height","weight","satisfaction","bmi","ethnic","imdscore"))#3.2
methods=c("EQ5D0","height","weight","satisfaction","bmi","ethnic","imdscore")  #3.3
![](images/Steps_MI-01.png)
mice?
?mice
?mice()
library(mice)
# create the impute datasets
imp <- mice(data, maxit=10, m = 5)
fit <- with(data=imp,exp=lm(bmi~age+sex+ethnic+imdscore))
summary(pool(fit))
class((pool(fit)))
str(fit)
library(mice)
# create the impute datasets
imp <- mice(data, maxit=10, m = 5)  #7.1
fit <- with(data=imp,expr = lm(bmi~age+sex+ethnic+imdscore)) #7.2
summary(pool(fit)) #7.3
fit <- with(data=imp,expr = lm(bmi~age+sex+ethnic+imdscore)) #7.2
fit <- with(data=imp,exp = lm(bmi~age+sex+ethnic+imdscore)) #7.2
head(fit)
head(fit[1])
(fit[1])
(fit[[1]])
summary(pool(fit))
fit <- with(data=imp,exp = lm(bmi~age+sex+ethnic+imdscore)) #7.2
summary(pool(fit))
fit <- with(data=imp,expr = lm(bmi~age+sex+ethnic+imdscore)) #7.2
summary(pool(fit))
class(imp)
str(imp)
(imp)[1]
head((imp)[1])
dim((imp)[1])
dim((imp)[[1]])
dim((imp)[[2]])
dim(imp[[2]])
dim(imp[2])
dim(imp[[1]])
dim(imp)
imp <- mice(data, maxit=10, m = 5)
imp.data <- complete(imp , "long")
imp.data[1:10,]
table(imp.data$.imp)
#Fit.list  <-   vector("list", nlevels(pdata$.imp))
Fit.list  <-   vector("list", nlevels(imp.data$.imp))  # generate a vector to store model fits
for (i in seq_len(nlevels(imp.data$.imp))) {
Fit.list[[i]]  <-  coxph(Surv(STOP6, Cess6 == 1) ~ Drug, data = imp.data[imp.data$.imp == i,])
}
Fit.list.mira                                              <- as.mira(Fit.list)
summary(pool(Fit.list.mira))
table(imp.data$.imp)
class(imp.data)
imp <- mice(data, maxit=10, m = 5) #9.1
imp.data <- complete(imp , "long") #9.2
table(imp.data$.imp)               #9.3
Fit.list  <-   vector("list", nlevels(pdata$.imp)) #9.4
imp <- mice(data, maxit=10, m = 5) #9.1
imp.data <- complete(imp , "long") #9.2
table(imp.data$.imp)               #9.3
Fit.list  <-   vector("list", nlevels(imp.data$.imp)) #9.4
for (i in seq_len(nlevels(imp.data$.imp))) {Fit.list[[i]] <- lm(bmi~age+sex+ethnic+imdscore, data = imp.data[imp.data$.imp == i,]) } #9.5
Fit.list.mira <- as.mira(Fit.list) #9.6
summary(pool(Fit.list.mira))       #9.7
nlevels(imp.data$.imp)
table(imp.data$.imp)
Fit.list  <-   vector("list", nlevels(imp.data$.imp)) #9.4
Fit.list
nlevels(imp.data$.imp)
imp.data$.imp
class(imp.data$.imp)
nlevels(imp.data$.imp)
unique(imp.data$.imp)
levels(imp.data$.imp)
length(unique(imp.data$.imp))
max(imp.data$.imp))
max(imp.data$.imp)
vector("list", unique(imp.data$.imp))
vector("list", 5
)
length(unique(imp.data$.imp))
Fit.list  <-   vector("list", length(unique(imp.data$.imp))) #9.4
for (i in seq_len(nlevels(imp.data$.imp))) {print(i)}
nlevels(imp.data$.imp)
length(unique(imp.data$.imp)
)
for (i in unique(imp.data$.imp)){print(i)}
for (i in unique(imp.data$.imp)) {Fit.list[[i]] <- lm(bmi~age+sex+ethnic+imdscore, data = imp.data[imp.data$.imp == i,]) } #9.5
Fit.list.mira <- as.mira(Fit.list) #9.6
summary(pool(Fit.list.mira))       #9.7
str(summary(pool(Fit.list.mira)) )
pool(Fit.list.mira$coefficients)
(Fit.list.mira$coefficients)
(Fit.list.mira[[1]]$coefficients)
(Fit.list[[1]]$coefficients)
(Fit.list[[1]]$ci)
(Fit.list[[1]]$residuals)
confint(Fit.list[[1]])
confint(Fit.list)
with(Fit.list.mira, expr=confint(Fit.list))
confint(summary(pool(Fit.list.mira)))
i
confint( Fit.list1[[i]])
confint( Fit.list[[i]])
rbind(Fit.list[[i]], confint( Fit.list[[i]])
)
imp <- mice(data, maxit=10, m = 5)  #9.1
imp.data <- complete(imp , "long")  #9.2
table(imp.data$.imp)                #9.3
Fit.list1  <-   vector("list", length(unique(imp.data$.imp))) #9.4
Fit.list2  <-   vector("list", length(unique(imp.data$.imp))) #9.4
for (i in unique(imp.data$.imp)) {  #9.5
Fit.list1[[i]] <- lm(bmi~age+sex+ethnic+imdscore, data = imp.data[imp.data$.imp == i,])
Fit.list2[[i]] <- confint( Fit.list1[[i]])
}  #9.5
Fit.list.mira1 <- as.mira(Fit.list1)#9.6
Fit.list.mira2 <- as.mira(Fit.list2)#9.6
summary(pool(Fit.list.mira1))       #9.7
summary(pool(Fit.list.mira2))       #9.7
summary(pool(Fit.list.mira1))
summary(pool(Fit.list.mira2))
Fit.list.mira2 <- as.mira(Fit.list2)
Fit.list.mira2
class(Fit.list.mira2)
(pool(Fit.list.mira2))
Fit.list.mira2 <- as.mira(Fit.list2)#9.6
summary(pool(Fit.list.mira1))       #9.7
pool(Fit.list.mira2)
summary(pool(Fit.list.mira1,conf.int = TRUE))       #9.7
# create the impute datasets
imp <- mice(data, maxit=10, m = 5)  #7.1
# create the impute datasets
imp <- mice(data, maxit=10, m = 5)  #7.1
fit <- with(data=imp,expr = lm(bmi~age+sex+ethnic+imdscore)) #7.2
summary(pool(fit), conf.int = TRUE) #7.3
imp = mice(data, maxit=10, m = 5)  #9.1
imp.data = complete(imp , "long")  #9.2
table(imp.data$.imp)                #9.3
Fit.list1 = vector("list", length(unique(imp.data$.imp))) #9.4
for (i in unique(imp.data$.imp)) {  #9.5
Fit.list[[i]] = lm(bmi~age+sex+ethnic+imdscore, data = imp.data[imp.data$.imp == i,])                             }  #9.5
Fit.list.mira = as.mira(Fit.list)#9.6
summary(pool(Fit.list.mira,conf.int = TRUE))       #9.7
class(Fit.list.mira)
class(Fit.list)
mira(Fit.list)
Fit.list2
class(Fit.list2)
as.mira(Fit.list2)
class(as.mira(Fit.list2))
pool(as.mira(Fit.list2))
(Fit.list[[i]])$estimates
(Fit.list[[i]])$coefficients
confint(Fit.list[[i]])
Fit.list[[i]]$coefficients
data.frame( (Fit.list[[i]]$coefficients, confint(Fit.list[[i]])))
data.frame( Fit.list[[i]]$coefficients, confint(Fit.list[[i]]))
cbind( Fit.list[[i]]$coefficients, confint(Fit.list[[i]]))
Fit.list2[[i]]= cbind(coefficients = Fit.list[[i]]$coefficients, confint(Fit.list[[i]]))
imp = mice(data, maxit=10, m = 5)   #9.1
imp.data = complete(imp , "long")   #9.2
table(imp.data$.imp)                #9.3
Fit.list = vector("list", length(unique(imp.data$.imp))) #9.4
Fit.list2= vector("list", length(unique(imp.data$.imp))) #9.4
for (i in unique(imp.data$.imp)) {  #9.5
Fit.list[[i]] = lm(bmi~age+sex+ethnic+imdscore, data = imp.data[imp.data$.imp == i,])
Fit.list2[[i]]= cbind(coefficients = Fit.list[[i]]$coefficients, confint(Fit.list[[i]]))
}  #9.5
Fit.list.mira = as.mira(Fit.list)   #9.6
summary(pool(Fit.list.mira,conf.int = TRUE)) #9.7
str(data)
(data)
Fit.list2[[i]]
Fit.list.mira2= as.mira(Fit.list2)  #9.6
summary(pool(Fit.list.mira2)
)
summary(pool(Fit.list.mira,conf.int = TRUE))
Fit.list.mira
Fit.list.mira2
Fit.list.mira
summary(Fit.list[[i]])
summary(Fit.list[[i]])
Fit.list2[[i]]= summary(Fit.list[[i]])
Fit.list.mira2= as.mira(Fit.list2)
summary(pool(Fit.list.mira2)
)
Fit.list.mira2
Fit.list2[[i]]
imp = mice(data, maxit=10, m = 5)   #9.1
imp.data = complete(imp , "long")   #9.2
table(imp.data$.imp)                #9.3
Fit.list = vector("list", length(unique(imp.data$.imp))) #9.4
Fit.list2= vector("list", length(unique(imp.data$.imp))) #9.4
for (i in unique(imp.data$.imp)) {  #9.5
Fit.list[[i]] = lm(bmi~age+sex+ethnic+imdscore, data = imp.data[imp.data$.imp == i,])
Fit.list2[[i]]= summary(Fit.list[[i]])
#cbind(coefficients = Fit.list[[i]]$coefficients, confint(Fit.list[[i]]))
}  #9.5
Fit.list.mira = as.mira(Fit.list)   #9.6
Fit.list.mira2= as.mira(Fit.list2)  #9.6
summary(pool(Fit.list.mira,conf.int = TRUE)) #9.7
pool(Fit.list.mira2)
Fit.list.mira2[[1]]
Fit.list.mira2[1]
Fit.list2[1]
summary(Fit.list[[i]])
summary(pool(Fit.list.mira,conf.int = TRUE))
pool(Fit.list.mira2,conf.int = TRUE)
summary(pool(Fit.list.mira))
pool(Fit.list.mira2)
class(pool(Fit.list.mira2))
temp = (pool(Fit.list.mira2))
summary(pool(Fit.list.mira2))
summary(pool(Fit.list.mira2), conf.int = TRUE)
for (i in unique(imp.data$.imp)) {  #9.5
fit = lm(bmi~age+sex+ethnic+imdscore, data = imp.data[imp.data$.imp == i,])
Fit.list[[i]]= summary(fit)
}  #9.5
Fit.list.mira = as.mira(Fit.list)   #9.6
summary(pool(Fit.list.mira),conf.int = TRUE) #9.7
temp = summary(pool(Fit.list.mira),conf.int = TRUE) #9.7
```{r mice}
library(mice)
# create the impute datasets
imp <- mice(data, maxit=10, m = 5)  #7.1
fit <- with(data=imp,expr = lm(bmi~age+sex+ethnic+imdscore)) #7.2
summary(pool(fit), conf.int = TRUE) #7.3
temp
md.pattern(data, plot = FALSE)
md.pattern(data, plot = TRUE)
names(data)
data %>%
interaction.plot(x.factor = bmi, trace.factor =sex, response = age, fun = median
)
interaction.plot(x.factor = bmi,  response = age, fun = median)
data %>% interaction.plot(x.factor = bmi,  response = age, fun = median)
data %>% interaction.plot(x.factor = sex,  response = age, fun = median)
data %>%
interaction.plot(x.factor = sex,  response = age, fun = median
)
data)names
names(data)
#data %>%
interaction.plot(x.factor = bmi, trace.factor = sex, response = age, fun = median
data=data)
#data %>%
interaction.plot(x.factor = data$bmi, trace.factor = data$sex, response = data$age, fun = median
)
#data %>%
interaction.plot(x.factor = data$bmi, trace.factor = data$sex, response = data$age, fun = mean,  col = c("#0198f9", "#f95801")
)
#data %>%
interaction.plot(x.factor = data$age, trace.factor = data$sex, response = data$bmi, fun = mean,  col = c("#0198f9", "#f95801")
)
#data %>%
interaction.plot(x.factor = data$age, trace.factor = data$sex, response = data$bmi, fun = mean,  col = c("#0198f9", "#f95801")
)
#data %>%
interaction.plot(x.factor = data$bmi, trace.factor = data$sex, response = data$age, fun = mean,  col = c("#0198f9", "#f95801")
)
#data %>%
interaction.plot(x.factor = data$age, trace.factor = data$sex, response = data$bmi, fun = mean,  col = c("#0198f9", "#f95801")
)
#data %>%
interaction.plot(x.factor = data$age, trace.factor = data$sex, response = data$bmi, fun = median,  col = c("#0198f9", "#f95801")
)
hist(data$age)
hist(data$bmi)
summaty(data$bmi)
summary(data$bmi)
summary(data$age)
summary(data)
interaction.plot(x.factor = data$age, trace.factor = data$sex, response = data$bmi, fun = mean,  col = c("#0198f9", "#f95801"), na.omit=TRUE
)
na.omit(data)
dim(na.omit(data) )
na.omit(data) %>%
interaction.plot(x.factor = age, trace.factor = sex, response = bmi, fun = mean,  col = c("#0198f9", "#f95801")
)
data %>% na.omit()
data %>% na.omit() %>% tally()
data %>% na.omit() %>%
interaction.plot(x.factor = age, trace.factor = sex, response = bmi, fun = mean,  col = c("#0198f9", "#f95801")
)
data %>% na.omit()
data %>% na.omit() %>% hist(age)
data %>% na.omit() %>% hist(age)
data$age %>% na.omit() %>% hist()
data$age %>% data %>% na.omit() %>% hist()
data$age %>% na.omit() %>% tally()
data$age %>% na.omit() %>% length()
summary(data$age)
temp = data %>% na.omit() mutate(age_cat = cut(age, breaks = seq(30, 100, by = 10)))
temp = data %>% na.omit() %>% mutate(age_cat = cut(age, breaks = seq(30, 100, by = 10)))
table(temp$age_cat)
temp %>%
interaction.plot(x.factor = cat_age, trace.factor = sex, response = bmi, fun = mean,  col = c("#0198f9", "#f95801")
)
#data %>%
#interaction.plot(x.factor = data$age, trace.factor = data$sex, response = data$bmi, fun = mean,  col = c("#0198f9", "#f95801")
#)
temp = data %>% na.omit() %>% mutate(age_cat = cut(age, breaks = seq(30, 100, by = 10)))
interaction.plot(x.factor = temp$cat_age, trace.factor = temp$sex, response = temp$bmi, fun = mean,  col = c("#0198f9", "#f95801"))
View(temp)
temp = data %>% mutate(age_cat = cut(age, breaks = seq(30, 100, by = 10)))
interaction.plot(x.factor = temp$cat_age, trace.factor = temp$sex, response = temp$bmi, fun = mean,  col = c("#0198f9", "#f95801"))
temp
table(temp$age_cat)
table(temp$bmi)
interaction.plot(x.factor = data$bmi, trace.factor = data$sex, response = data$age, fun = mean,  col = c("#0198f9", "#f95801")
)
